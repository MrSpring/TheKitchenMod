buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'

version = "1.3.22-1.7.2-10"
group = "dk.mrspring.kitchen" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "TheKitchenMod"

minecraft {
    version = "1.7.10-10.13.4.1566-1.7.10"
    assetDir = "eclipse/assets"
}

repositories {
    maven {
        name "applecore"
        url "http://www.ryanliptak.com/maven/"
    }
    maven {
        name "chickenbones"
        url "http://chickenbones.net/maven/"
    }
    maven {
        name "mobius"
        url "http://mobiusstrip.eu/maven/"
    }
}

dependencies {
    compile "applecore:AppleCore:1.7.10-1.1.0:deobf"
    compile "codechicken:CodeChickenLib:1.7.10-1.1.3.140:dev"
    compile "codechicken:CodeChickenCore:1.7.10-1.0.7.47:dev"
    compile "codechicken:NotEnoughItems:1.7.10-1.0.5.118:dev"
    compile "mcp.mobius.waila:Waila:1.5.10_1.7.10"
    compile files("libs/FurnitureMod-3.4.8_1.7.10.jar")
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"

    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

task sourceJar(type: Jar) {
    from(sourceSets.main.java)
    classifier = "src"
}

task devJar(type: Jar) {
    from(sourceSets.main.output)
    classifier = "deobf"
}

artifacts {
    archives sourceJar, devJar
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

idea {
    module {
        inheritOutputDirs = true
    }
}
