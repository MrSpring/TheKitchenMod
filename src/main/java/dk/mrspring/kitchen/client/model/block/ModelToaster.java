// Date: 10-12-2014 14:44:27
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX


package dk.mrspring.kitchen.client.model.block;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class ModelToaster extends ModelBase
{
    //fields
    ModelRenderer base1;
    ModelRenderer base2;
    ModelRenderer base3;
    ModelRenderer base4;
    ModelRenderer base5;
    ModelRenderer base6;
    ModelRenderer base7;
    ModelRenderer base8;
    ModelRenderer base9;
    ModelRenderer base10;
    ModelRenderer button;

    public ModelToaster()
    {
        textureWidth = 64;
        textureHeight = 32;

        base1 = new ModelRenderer(this, 0, 18);
        base1.addBox(0F, 0F, 0F, 6, 4, 1);
        base1.setRotationPoint(-3F, 18F, 2F);
        base1.setTextureSize(64, 32);
        base1.mirror = true;
        setRotation(base1, 0F, 0F, 0F);
        base2 = new ModelRenderer(this, 0, 0);
        base2.addBox(0F, 0F, 0F, 2, 4, 6);
        base2.setRotationPoint(3F, 18F, -3F);
        base2.setTextureSize(64, 32);
        base2.mirror = true;
        setRotation(base2, 0F, 0F, 0F);
        base3 = new ModelRenderer(this, 0, 0);
        base3.addBox(0F, 0F, 0F, 1, 1, 1);
        base3.setRotationPoint(-3.5F, 23F, 1.5F);
        base3.setTextureSize(64, 32);
        base3.mirror = true;
        setRotation(base3, 0F, 0F, 0F);
        base4 = new ModelRenderer(this, 0, 24);
        base4.addBox(0F, 0F, 0F, 6, 4, 1);
        base4.setRotationPoint(-3F, 18F, -3F);
        base4.setTextureSize(64, 32);
        base4.mirror = true;
        setRotation(base4, 0F, 0F, 0F);
        base5 = new ModelRenderer(this, 17, 0);
        base5.addBox(0F, 0F, 0F, 1, 4, 6);
        base5.setRotationPoint(-4F, 18F, -3F);
        base5.setTextureSize(64, 32);
        base5.mirror = true;
        setRotation(base5, 0F, 0F, 0F);
        base6 = new ModelRenderer(this, 0, 11);
        base6.addBox(0F, 0F, 0F, 6, 4, 2);
        base6.setRotationPoint(-3F, 18F, -1F);
        base6.setTextureSize(64, 32);
        base6.mirror = true;
        setRotation(base6, 0F, 0F, 0F);
        base7 = new ModelRenderer(this, 32, 0);
        base7.addBox(0F, 0F, 0F, 9, 1, 6);
        base7.setRotationPoint(-4F, 22F, -3F);
        base7.setTextureSize(64, 32);
        base7.mirror = true;
        setRotation(base7, 0F, 0F, 0F);
        base8 = new ModelRenderer(this, 0, 0);
        base8.addBox(0F, 0F, 0F, 1, 1, 1);
        base8.setRotationPoint(-3.5F, 23F, -2.5F);
        base8.setTextureSize(64, 32);
        base8.mirror = true;
        setRotation(base8, 0F, 0F, 0F);
        base9 = new ModelRenderer(this, 0, 0);
        base9.addBox(0F, 0F, 0F, 1, 1, 1);
        base9.setRotationPoint(3.5F, 23F, -2.5F);
        base9.setTextureSize(64, 32);
        base9.mirror = true;
        setRotation(base9, 0F, 0F, 0F);
        base10 = new ModelRenderer(this, 0, 0);
        base10.addBox(0F, 0F, 0F, 1, 1, 1);
        base10.setRotationPoint(3.5F, 23F, 1.5F);
        base10.setTextureSize(64, 32);
        base10.mirror = true;
        setRotation(base10, 0F, 0F, 0F);
        button = new ModelRenderer(this, 17, 11);
        button.addBox(0F, 0F, 0F, 1, 1, 2);
        button.setRotationPoint(5F, 19F, -1F);
        button.setTextureSize(64, 32);
        button.mirror = true;
        setRotation(button, 0F, 0F, 0F);
    }

    public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5, boolean isCooking)
    {
        super.render(entity, f, f1, f2, f3, f4, f5);
        setRotationAngles(f, f1, f2, f3, f4, f5, entity);
        base1.render(f5);
        base2.render(f5);
        base3.render(f5);
        base4.render(f5);
        base5.render(f5);
        base6.render(f5);
        base7.render(f5);
        base8.render(f5);
        base9.render(f5);
        base10.render(f5);
        if (isCooking)
            button.rotationPointY = 20F;
        else button.rotationPointY = 19F;
        button.render(f5);
    }

    private void setRotation(ModelRenderer model, float x, float y, float z)
    {
        model.rotateAngleX = x;
        model.rotateAngleY = y;
        model.rotateAngleZ = z;
    }

    public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity)
    {
        super.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    }

}
